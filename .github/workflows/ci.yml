name: CI

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      # Install Rust toolchain
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-wasip1
      
      # Install wasm-pack
      - name: Install wasm-pack
        uses: jetli/wasm-pack-action@v0.4.0
        with:
          version: 'latest'

      # Install wasmtime
      - name: Install wasmtime
        uses: bytecodealliance/actions/wasmtime/setup@v1
        with:
          version: "latest"

      # Run tests with -Ctarget-cpu=native
      - name: Run tests with native CPU features
        run: RUSTFLAGS="-Ctarget-cpu=native" cargo test --verbose

      # Run tests with wasmtime and SIMD128
      - name: Run tests with wasmtime and SIMD128
        run: |
          CARGO_TARGET_WASM32_WASIP1_RUNNER="wasmtime run --wasm-features=simd --" \
          RUSTFLAGS="-Ctarget-feature=+simd128" \
          cargo test --target wasm32-wasip1 --verbose

      # Checkpoint: ensure tests pass before continuing with builds
      - name: Build WASM backend
        run: ./build_wasm.sh

      # Build 4 variants in parallel
      - name: Build release variants
        run: |
          mkdir -p artifacts
          
          # Build avx512vbmi variant
          RUSTFLAGS="-Ctarget-cpu=x86-64-v4 -Ctarget-feature=+avx512vbmi" \
          cargo build -j1 --bin pow-buster --profile release-unwinding \
          --features cli,client,server,server-wasm \
          --target-dir target/avx512vbmi-build &
          
          # Build avx512f variant
          RUSTFLAGS="-Ctarget-cpu=x86-64-v4 -Ctarget-feature=+avx512f" \
          cargo build -j1 --bin pow-buster --profile release-unwinding \
          --features cli,client,server,server-wasm \
          --target-dir target/avx512f-build &
          
          # Build avx2+sha variant
          RUSTFLAGS="-Ctarget-cpu=x86-64-v3 -Ctarget-feature=+sha,+avx2" \
          cargo build -j1 --bin pow-buster --profile release-unwinding \
          --features cli,client,server,server-wasm \
          --target-dir target/avx2sha-build &
          
          # Build scalar variant
          RUSTFLAGS="-Ctarget-cpu=x86-64" \
          cargo build -j1 --bin pow-buster --profile release-unwinding \
          --features cli,client,server,server-wasm \
          --target-dir target/scalar-build &
          
          # Wait for all builds to complete
          wait
          
          # Copy artifacts with descriptive names
          cp target/avx512vbmi-build/release-unwinding/pow-buster artifacts/pow-buster-avx512vbmi
          cp target/avx512f-build/release-unwinding/pow-buster artifacts/pow-buster-avx512f
          cp target/avx2sha-build/release-unwinding/pow-buster artifacts/pow-buster-avx2sha
          cp target/scalar-build/release-unwinding/pow-buster artifacts/pow-buster-scalar

      # Upload artifacts for tagged builds
      - if: startsWith(github.ref, 'refs/tags/v')
        uses: svenstaro/upload-release-action@2.9.0
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: artifacts/*
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
