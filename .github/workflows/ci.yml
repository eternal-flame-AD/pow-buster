name: CI

permissions:
  contents: write

on:
  push:
    branches: [main]
    tags:
      - "v*"
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required for uploading release artifacts

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install system dependencies
        run: sudo apt-get install musl-dev musl-tools nodejs npm

      - name: Install Node.js dependencies
        run: npm install -g web-ext

      # Install Rust toolchain
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-wasip1,x86_64-unknown-linux-musl

      # Install wasm-pack
      - name: Install wasm-pack
        uses: jetli/wasm-pack-action@v0.4.0
        with:
          version: "latest"

      # Install wasmtime
      - name: Install wasmtime
        uses: bytecodealliance/actions/wasmtime/setup@v1
        with:
          version: "latest"

      # Run tests with -Ctarget-cpu=native
      - name: Run tests with native CPU features
        run: RUSTFLAGS="-Ctarget-cpu=native" cargo test --verbose

      # Run tests with wasmtime and SIMD128
      - name: Run tests with wasmtime and SIMD128
        run: |
          CARGO_TARGET_WASM32_WASIP1_RUNNER="wasmtime" \
          RUSTFLAGS="-Ctarget-feature=+simd128" \
          cargo test --target wasm32-wasip1 --verbose

      - name: Build WASM backend
        run: ./build_wasm.sh

      - name: Build browser extension
        run: cd browser-addon && web-ext build -o -v

      - name: Build release variants
        run: |
          mkdir -p artifacts

          # Build avx512vbmi variant
          RUSTFLAGS="-Ctarget-cpu=x86-64-v4 -Ctarget-feature=+avx512vbmi" \
          cargo build -j1 --bin pow-buster --profile release-unwinding \
          --target x86_64-unknown-linux-musl \
          --features cli,client,server,server-wasm \
          --target-dir target/avx512vbmi-build &

          # Build avx512f variant
          RUSTFLAGS="-Ctarget-cpu=x86-64-v3 -Ctarget-feature=+avx512f" \
          cargo build -j1 --bin pow-buster --profile release-unwinding \
          --target x86_64-unknown-linux-musl \
          --features cli,client,server,server-wasm \
          --target-dir target/avx512f-build &

          # Build avx2+sha variant
          RUSTFLAGS="-Ctarget-cpu=x86-64-v2 -Ctarget-feature=+sha,+avx2" \
          cargo build -j1 --bin pow-buster --profile release-unwinding \
          --target x86_64-unknown-linux-musl \
          --features cli,client,server,server-wasm \
          --target-dir target/avx2sha-build &

          # Build scalar variant
          RUSTFLAGS="-Ctarget-cpu=x86-64" \
          cargo build -j1 --bin pow-buster --profile release-unwinding \
          --target x86_64-unknown-linux-musl \
          --features cli,client,server,server-wasm \
          --target-dir target/scalar-build &

          # Wait for all builds to complete
          wait

          # Copy artifacts with descriptive names
          cp target/avx512vbmi-build/x86_64-unknown-linux-musl/release-unwinding/pow-buster artifacts/pow-buster-avx512vbmi
          cp target/avx512f-build/x86_64-unknown-linux-musl/release-unwinding/pow-buster artifacts/pow-buster-avx512f
          cp target/avx2sha-build/x86_64-unknown-linux-musl/release-unwinding/pow-buster artifacts/pow-buster-avx2sha
          cp target/scalar-build/x86_64-unknown-linux-musl/release-unwinding/pow-buster artifacts/pow-buster-scalar
          cp browser-addon/web-ext-artifacts/pow-buster-*.zip artifacts/pow-buster-browser-extension.xpi

      # Upload artifacts for tagged builds
      - if: startsWith(github.ref, 'refs/tags/v')
        uses: svenstaro/upload-release-action@2.9.0
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: artifacts/*
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
